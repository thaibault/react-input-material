{
  "name": "react-input-material",
  "version": "0.0.523",
  "description": "Reusable material design based input field with support for (richt-)text, code, selections, numbers, dates and so on.",
  "keywords": [
    "form-field",
    "input",
    "number-input",
    "rich-text",
    "text"
  ],
  "homepage": "https://torben.website/react-input-material",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/react-input-material/issues"
  },
  "license": "CC-BY-3.0",
  "main": "dist/index.js",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "dist/components",
    "dist/helper.d.ts",
    "dist/helper.js",
    "dist/index.css",
    "dist/index.d.ts",
    "dist/index.js",
    "dist/material-fixes.css",
    "dist/testHelper.d.ts",
    "dist/testHelper.js",
    "dist/type.d.ts",
    "dist/type.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/react-input-material"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain",
    "build:bundle": "yarn build:types; yarn build:bundle:plain",
    "build:bundle:plain": "weboptimizer build '{__reference__: [\"target:minimal\", \"target:bundle\"]}'",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "yarn clear && weboptimizer lint",
    "patch": "for path in patches/*.patch; do target_file_path=\"$(echo \"$path\" | sed --regexp-extended 's/patches\\/([^/]+).patch$/\\1/' | sed 's:\\+:/:g')\"; source_file_path=\"$path\"; echo \"Patch file \\\"$target_file_path\\\" with \\\"$source_file_path\\\".\"; patch --forward --input \"$source_file_path\" --reject-file - \"$target_file_path\"; done; true",
    "prepare": "ln --force --symbolic react node_modules/@emotion/core && yarn build",
    "postinstall": "yarn patch || true",
    "postversion": "yarn publish --non-interactive; git push --tags && git push",
    "serve": "weboptimizer serve",
    "serve:minimal": "weboptimizer serve '{__reference__: \"target:minimal\"}'",
    "start": "yarn serve",
    "test": "yarn clear && weboptimizer test '{__reference__: \"target:minimal\"}'",
    "test:browser": "yarn clear && weboptimizer test:browser '{__reference__: \"target:minimal\"}'",
    "test:coverage": "yarn clear && weboptimizer test:coverage",
    "test:coverage:report": "yarn clear && weboptimizer test:coverage:report '{__reference__: \"target:minimal\"}'",
    "update": "yarn version --patch",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "runkitExample": "require('@babel/runtime/package.json')\n\nglobalThis.window = globalThis\n\nconst {GenericAnimate} = require('react-input-material')\n\nGenericAnimate.webComponentAdapterWrappedis",
  "devDependencies": {
    "@babel/eslint-parser": "*",
    "@babel/plugin-transform-proto-to-assign": "*",
    "@babel/preset-react": "*",
    "@emotion/react": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/menu": "*",
    "@rmwc/select": "*",
    "@rmwc/tabs": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@teamsupercell/typings-for-css-modules-loader": "*",
    "@tinymce/tinymce-react": "*",
    "@types/ejs": "*",
    "@types/html-minifier": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/node": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "@types/webpack-env": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "blob-util": "*",
    "clientnode": "*",
    "css-loader": "*",
    "cssnano": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "identity-obj-proxy": "*",
    "jest": "*",
    "jsdoc": "*",
    "material-icons": "*",
    "mini-css-extract-plugin": "*",
    "postcss": "*",
    "postcss-import": "*",
    "postcss-loader": "*",
    "postcss-nested": "*",
    "postcss-preset-env": "*",
    "prop-types": "*",
    "react": ">=17",
    "react-ace": "*",
    "react-dom": "*",
    "react-generic-dummy": "*",
    "react-transition-group": "*",
    "react-useanimations": "*",
    "style-loader": "*",
    "stylelint": "*",
    "stylelint-config-standard": "*",
    "tslib": "*",
    "typescript-plugin-css-modules": "*",
    "web-component-wrapper": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/select": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@tinymce/tinymce-react": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "blob-util": "*",
    "clientnode": "*",
    "material-icons": "*",
    "react": "*",
    "react-ace": "*",
    "react-dom": "*",
    "react-transition-group": "*",
    "react-useanimations": "*",
    "tslib": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    },
    "@rmwc/card": {
      "optional": true
    },
    "@rmwc/checkbox": {
      "optional": true
    },
    "@rmwc/circular-progress": {
      "optional": true
    },
    "@rmwc/formfield": {
      "optional": true
    },
    "@rmwc/icon-button": {
      "optional": true
    },
    "@rmwc/select": {
      "optional": true
    },
    "@rmwc/textfield": {
      "optional": true
    },
    "@rmwc/theme": {
      "optional": true
    },
    "@rmwc/tooltip": {
      "optional": true
    },
    "@rmwc/typography": {
      "optional": true
    },
    "@tinymce/tinymce-react": {
      "optional": true
    },
    "@types/react": {
      "optional": true
    },
    "@types/react-dom": {
      "optional": true
    },
    "@types/react-transition-group": {
      "optional": true
    },
    "blob-util": {
      "optional": true
    },
    "clientnode": {
      "optional": true
    },
    "material-icons": {
      "optional": true
    },
    "react": {
      "optional": true
    },
    "react-ace": {
      "optional": true
    },
    "react-dom": {
      "optional": true
    },
    "react-transition-group": {
      "optional": true
    },
    "react-useanimations": {
      "optional": true
    },
    "tinymce": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=19",
    "npm": ">=8"
  },
  "resolutions": {
    "colors": "1.4.0"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "languages": [
      "deDE",
      "enUS"
    ],
    "tagline": "Do not refactor input fields anymore.<!--deDE:Nie wieder Eingabefelder anpassen.-->",
    "trackingCode": "TODO"
  },
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "files": {
      "compose": {
        "cascadingStyleSheet": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['test:browser', 'serve'].includes(self.givenCommandLineArguments[2]) ? null : `${path.resolve(self.path.target.asset.cascadingStyleSheet, '[name].css')}?${self.hashAlgorithm}=[chunkhash]`"
        }
      }
    },
    "generic": {
      "entry": {
        "./components/FileInput/import": "./components/FileInput/import.module",
        "./components/FileInput/index": "./components/FileInput/index",
        "./components/GenericAnimate/index": "./components/GenericAnimate/index",
        "./components/GenericInput/import": "./components/GenericInput/import.module",
        "./components/GenericInput/index": "./components/GenericInput/index",
        "./components/Inputs/import.module": "./components/Inputs/import.module",
        "./components/Inputs/index": "./components/Inputs/index",
        "./components/Interval/import.module": "./components/Interval/import.module",
        "./components/Interval/index": "./components/Interval/index",
        "./components/RequireableCheckbox/import.module": "./components/RequireableCheckbox/import.module",
        "./components/RequireableCheckbox/index": "./components/RequireableCheckbox/index",
        "./components/WrapConfigurations": "./components/WrapConfigurations",
        "./components/WrapThemeProvider": "./components/WrapThemeProvider",
        "./components/WrapTooltip": "./components/WrapTooltip",
        "helper": "./helper",
        "index": [
          "./index.css",
          "./index.ts"
        ],
        "material-fixes": "./material-fixes",
        "testHelper": "./testHelper",
        "type": "./type"
      },
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? ['./index.css', './playground'] : 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test'} : self.generic.entry"
      }
    },
    "module": {
      "cascadingStyleSheet": {
        "exclude": false,
        "options": {
          "import": {
            "filter": {
              "__evaluate__": "(url) => !url.includes('.css')"
            }
          }
        }
      },
      "optimizer": {
        "babelMinify": {
          "bundle": {
            "transform": {
              "#": "To provide a logging output we need to exclude this feature.",
              "removeConsole": false
            }
          },
          "#": "Avoids TypeError: Cannot read property 'removeBinding' of null.",
          "module": null
        },
        "#": "We have to add disable \"mergeRules\" since it removes some needed css directives otherwise.",
        "cssnano": {
          "__evaluate__": "self.debug ? null : {preset: [optionalRequire('cssnano-preset-default'), {autoprefixer: false, discardUnused: !self.library, mergeRules: false}]}"
        }
      },
      "preprocessor": {
        "cascadingStyleSheet": {
          "additional": {
            "plugins": {
              "pre": {
                "__append__": "require('postcss-nested')"
              }
            }
          }
        },
        "javaScript": {
          "options": {
            "presets": {
              "#": "TODO: Remove \"@babel/react\" options when updated to babel 8. NOTE: We have to disable module export/import transformation to allow tree shaking by the final (minimizer).",
              "__evaluate__": "[['@babel/react', {runtime: 'automatic'}], ['@babel/preset-env', {loose: true, modules: false, targets: self.targetTechnology === 'node' ? {node: 'current'} : {browsers: self.generic.supportedBrowsers, node: 'current'}}], '@babel/typescript'].concat((self.debug || !self.module.optimizer.babelMinify.module || 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'document') ? [] : [['minify', self.module.optimizer.babelMinify.module]])"
            }
          }
        }
      }
    },
    "path": {
      "source": {
        "base": "src/"
      },
      "target": {
        "base": "dist/"
      }
    },
    "target:bundle": {
      "inPlace": {
        "externalLibrary": {
          "dynamic": true,
          "normal": true
        }
      },
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "target:minimal": {
      "module": {
        "aliases": {
          "#": "Remove unneeded optional dependencies.",
          "@rmwc/tooltip": "react-generic-dummy",
          "@tinymce/tinymce-react$": "react-generic-dummy",
          "ace-builds$": "react-generic-dummy",
          "react-ace$": "react-generic-dummy",
          "react-useanimations$": "react-generic-dummy",
          "react-useanimations/lib/lock$": "react-generic-dummy",
          "react-useanimations/lib/plusToX$": "react-generic-dummy"
        }
      }
    }
  }
}
